{"version":3,"file":"nodeClient.js","sourceRoot":"","sources":["../../src/nodeClient.ts"],"names":[],"mappings":"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","sourcesContent":["import { Identify } from '@amplitude/identify';\nimport {\n  Client,\n  Event,\n  Middleware,\n  MiddlewareExtra,\n  Options,\n  Response,\n  Retry,\n  SKIPPED_RESPONSE,\n} from '@amplitude/types';\nimport { logger, isNodeEnv, isValidEvent } from '@amplitude/utils';\nimport { RetryHandler } from './retry/defaultRetry';\nimport { SDK_NAME, SDK_VERSION, DEFAULT_OPTIONS } from './constants';\nimport { MiddlewareRunner } from './middleware/middlewareRunner';\n\nexport class NodeClient implements Client<Options> {\n  /** Project Api Key */\n  protected readonly _apiKey: string;\n\n  /** Options for the client. */\n  protected readonly _options: Options;\n\n  private _events: Event[] = [];\n  private _responseListeners: Array<{ resolve: (response: Response) => void; reject: (err: Error) => void }> = [];\n  private readonly _transportWithRetry: Retry;\n  private _flushTimer: NodeJS.Timeout | null = null;\n  private readonly _middlewareRunner: MiddlewareRunner;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param apiKey API key for your project\n   * @param options options for the client\n   */\n  public constructor(apiKey: string, options: Partial<Options> = {}) {\n    this._apiKey = apiKey;\n    this._options = Object.assign({}, DEFAULT_OPTIONS, options);\n    this._setUpLogging();\n    this._transportWithRetry = this._options.retryClass ?? this._setupDefaultTransport();\n    this._middlewareRunner = new MiddlewareRunner();\n    if (!isNodeEnv()) {\n      logger.warn(\n        '@amplitude/node initialized in a non-node environment and will not work. If you are planning to add Amplitude to a browser environment, please use amplitude-js',\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): Options {\n    return this._options;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public async flush(): Promise<Response> {\n    // Clear the timeout\n    if (this._flushTimer !== null) {\n      clearTimeout(this._flushTimer);\n      this._flushTimer = null;\n    }\n\n    // Check if there's 0 events, flush is not needed.\n    if (this._events.length === 0) {\n      return SKIPPED_RESPONSE;\n    }\n\n    // Reset the events + response listeners and pull them out.\n    const responseListeners = this._responseListeners;\n    this._responseListeners = [];\n    const eventsToSend = this._events;\n    this._events = [];\n\n    try {\n      const response = await this._transportWithRetry.sendEventsWithRetry(eventsToSend);\n      responseListeners.forEach(({ resolve }) => resolve(response));\n      return response;\n    } catch (err) {\n      responseListeners.forEach(({ reject }) => reject(err));\n      throw err;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public async logEvent(event: Event, extra?: MiddlewareExtra): Promise<Response> {\n    if (this._options.optOut) {\n      return await Promise.resolve(SKIPPED_RESPONSE);\n    }\n\n    this._annotateEvent(event);\n    this._observeEvent(event);\n\n    let middlewareCompleted = false;\n    this._middlewareRunner.run({ event, extra }, () => {\n      middlewareCompleted = true;\n    });\n\n    if (!middlewareCompleted) {\n      logger.warn('Middleware chain skipped logEvent action.');\n      return await Promise.resolve(SKIPPED_RESPONSE);\n    }\n\n    if (!isValidEvent(event)) {\n      logger.warn('Found invalid event - skipping logEvent action.');\n      return await Promise.resolve(SKIPPED_RESPONSE);\n    }\n\n    return await new Promise((resolve, reject) => {\n      // Add event to unsent events queue.\n      this._events.push(event);\n      this._responseListeners.push({ resolve, reject });\n      if (this._events.length >= this._options.maxCachedEvents) {\n        // # of events exceeds the limit, flush them.\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.flush();\n      } else {\n        // Not ready to flush them and not timing yet, then set the timeout\n        if (this._flushTimer === null) {\n          this._flushTimer = setTimeout(() => {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            this.flush();\n          }, this._options.uploadIntervalInSec * 1000);\n        }\n      }\n    });\n  }\n\n  /**\n   * Sends an identify request for a specific user and device ID, given an identify event.\n   * Functionally similar to calling logEvent on an event created by the identify object\n   *\n   * @param userId the user ID that user properties are being attached to\n   * @param deviceId the device ID that user properties are being attached to.\n   * @param identify the Identify instance containing user property information\n   * @returns a Promise containing metadata about the success of sending this identify to the Amplitude API\n   */\n  public async identify(userId: string | null, deviceId: string | null, identify: Identify): Promise<Response> {\n    if (!(identify instanceof Identify)) {\n      logger.warn('Invalid Identify object. Skipping operation.');\n      return await Promise.resolve(SKIPPED_RESPONSE);\n    }\n\n    const identifyEvent = identify.identifyUser(userId, deviceId);\n    return await this.logEvent(identifyEvent);\n  }\n\n  public addEventMiddleware(middleware: Middleware): NodeClient {\n    this._middlewareRunner.add(middleware);\n    return this;\n  }\n\n  /** Add platform dependent field onto event. */\n  private _annotateEvent(event: Event): void {\n    event.library = `${SDK_NAME}/${SDK_VERSION}`;\n  }\n\n  /** Merge plan field into event */\n  private _observeEvent(event: Event): void {\n    if (typeof this._options.plan !== 'undefined') {\n      event.plan = {\n        ...this._options.plan,\n        ...event.plan,\n      };\n    }\n  }\n\n  private _setupDefaultTransport(): RetryHandler {\n    return new RetryHandler(this._apiKey, this._options);\n  }\n\n  private _setUpLogging(): void {\n    if (this._options.debug || this._options.logLevel > 0) {\n      if (this._options.logLevel > 0) {\n        logger.enable(this._options.logLevel);\n      } else {\n        logger.enable();\n      }\n    }\n  }\n}\n"]}