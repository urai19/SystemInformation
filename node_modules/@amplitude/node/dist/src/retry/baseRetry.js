Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseRetryHandler = void 0;
var tslib_1 = require("tslib");
var transports_1 = require("../transports");
var constants_1 = require("../constants");
var BaseRetryHandler = /** @class */ (function () {
    function BaseRetryHandler(apiKey, options) {
        if (options === void 0) { options = {}; }
        var _a;
        this._apiKey = apiKey;
        this._options = tslib_1.__assign(tslib_1.__assign({}, constants_1.DEFAULT_OPTIONS), options);
        this._transport = (_a = this._options.transportClass) !== null && _a !== void 0 ? _a : transports_1.setupDefaultTransport(this._options);
    }
    /**
     * @inheritDoc
     */
    BaseRetryHandler.prototype.sendEventsWithRetry = function (events) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var response;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._transport.sendPayload(this._getPayload(events))];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, response];
                }
            });
        });
    };
    BaseRetryHandler.prototype._getPayloadOptions = function () {
        if (typeof this._options.minIdLength === 'number') {
            return {
                options: {
                    min_id_length: this._options.minIdLength,
                },
            };
        }
        return {};
    };
    BaseRetryHandler.prototype._getPayload = function (events) {
        return tslib_1.__assign({ api_key: this._apiKey, events: events }, this._getPayloadOptions());
    };
    return BaseRetryHandler;
}());
exports.BaseRetryHandler = BaseRetryHandler;
//# sourceMappingURL=baseRetry.js.map