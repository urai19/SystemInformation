{"version":3,"file":"identify.js","sourceRoot":"","sources":["../../src/identify.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  IdentifyEvent,\n  GroupIdentifyEvent,\n  IdentifyOperation,\n  IdentifyUserProperties,\n  ValidPropertyType,\n  SpecialEventType,\n} from '@amplitude/types';\nimport { logger, generateBase36Id, isValidProperties } from '@amplitude/utils';\n\nimport { UNSET_VALUE, USER_IDENTIFY_OPERATIONS, GROUP_IDENTIFY_OPERATIONS } from './constants';\n\n// A specific helper for the identify field\nconst identifyWarn = (operation: IdentifyOperation, ...msgs: any[]): void => {\n  return logger.warn('On Identify operation ', operation, ': ', ...msgs);\n};\n\nexport class Identify {\n  // The set of operations that have been added to this identify\n  protected readonly _propertySet: Set<string> = new Set<string>();\n  protected _properties: IdentifyUserProperties = {};\n  protected _groups: { [groupName: string]: string } = {};\n\n  /** Create a user identify event out of this identify */\n  public identifyUser(userId: string | null, deviceId: string | null = null): IdentifyEvent {\n    const identifyEvent: IdentifyEvent = {\n      event_type: SpecialEventType.IDENTIFY,\n      groups: { ...this._groups },\n      user_properties: this.getUserProperties(),\n    };\n\n    let hasUserId = false;\n    let hasDeviceId = false;\n\n    if (typeof userId === 'string' && userId.length > 0) {\n      hasUserId = true;\n      identifyEvent.user_id = userId;\n    }\n\n    if (typeof deviceId === 'string' && deviceId.length > 0) {\n      hasDeviceId = true;\n      identifyEvent.device_id = deviceId;\n    }\n\n    if (!hasUserId && !hasDeviceId) {\n      logger.warn(\n        'Creating identify event without device or user ID - this event will be rejected unless one is attached',\n      );\n    }\n\n    return identifyEvent;\n  }\n\n  public identifyGroup(groupName: string, groupValue: string): GroupIdentifyEvent {\n    const identifyEvent: GroupIdentifyEvent = {\n      event_type: SpecialEventType.GROUP_IDENTIFY,\n      groups: { [groupName]: groupValue },\n      group_properties: this.getGroupUserProperties(),\n      device_id: generateBase36Id(), // Generate a throw-away, non-colliding ID\n    };\n\n    return identifyEvent;\n  }\n\n  protected getUserProperties(): IdentifyUserProperties {\n    const userPropertiesCopy: IdentifyUserProperties = {};\n    for (const field of USER_IDENTIFY_OPERATIONS) {\n      if (field in this._properties) {\n        userPropertiesCopy[field] = this._properties[field];\n      }\n    }\n\n    return userPropertiesCopy;\n  }\n\n  protected getGroupUserProperties(): IdentifyUserProperties {\n    const userPropertiesCopy: IdentifyUserProperties = {};\n    for (const field of GROUP_IDENTIFY_OPERATIONS) {\n      if (field in this._properties) {\n        userPropertiesCopy[field] = this._properties[field];\n      }\n    }\n\n    return userPropertiesCopy;\n  }\n\n  public setGroup(groupName: string, groupValue: string): Identify {\n    const isSuccessfulSet = this._safeSet(IdentifyOperation.SET, groupName, groupValue);\n    if (isSuccessfulSet) {\n      this._groups[groupName] = groupValue;\n    }\n\n    return this;\n  }\n\n  public set(property: string, value: ValidPropertyType): Identify {\n    this._safeSet(IdentifyOperation.SET, property, value);\n    return this;\n  }\n\n  public setOnce(property: string, value: ValidPropertyType): Identify {\n    this._safeSet(IdentifyOperation.SET_ONCE, property, value);\n    return this;\n  }\n\n  public append(property: string, value: ValidPropertyType): Identify {\n    this._safeSet(IdentifyOperation.APPEND, property, value);\n    return this;\n  }\n\n  public prepend(property: string, value: ValidPropertyType): Identify {\n    this._safeSet(IdentifyOperation.PREPEND, property, value);\n    return this;\n  }\n\n  public postInsert(property: string, value: ValidPropertyType): Identify {\n    this._safeSet(IdentifyOperation.POSTINSERT, property, value);\n    return this;\n  }\n\n  public preInsert(property: string, value: ValidPropertyType): Identify {\n    this._safeSet(IdentifyOperation.PREINSERT, property, value);\n    return this;\n  }\n\n  public remove(property: string, value: ValidPropertyType): Identify {\n    this._safeSet(IdentifyOperation.REMOVE, property, value);\n    return this;\n  }\n\n  public add(property: string, value: number): Identify {\n    this._safeSet(IdentifyOperation.ADD, property, value);\n    return this;\n  }\n\n  public unset(property: string): Identify {\n    this._safeSet(IdentifyOperation.UNSET, property, UNSET_VALUE);\n    return this;\n  }\n\n  public clearAll(): Identify {\n    // When clear all happens, all properties are unset. Reset the entire object.\n    this._properties = {};\n    this._properties[IdentifyOperation.CLEAR_ALL] = UNSET_VALUE;\n\n    return this;\n  }\n\n  // Returns whether or not this set actually worked.\n  private _safeSet(operation: IdentifyOperation, property: string, value: any): boolean {\n    if (this._validate(operation, property, value)) {\n      let userPropertyMap: any = this._properties[operation];\n      if (userPropertyMap === undefined) {\n        userPropertyMap = {};\n        this._properties[operation] = userPropertyMap;\n      }\n\n      userPropertyMap[property] = value;\n      this._propertySet.add(property);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _validate(operation: IdentifyOperation, property: string, value: any): boolean {\n    if (this._properties[IdentifyOperation.CLEAR_ALL] !== undefined) {\n      identifyWarn(operation, 'clear all already set. Skipping operation');\n      return false;\n    }\n\n    if (this._propertySet.has(property)) {\n      identifyWarn(operation, 'property ', property, ' already used. Skipping operation');\n      return false;\n    }\n\n    if (operation === IdentifyOperation.ADD) {\n      return typeof value === 'number';\n    } else if (operation !== IdentifyOperation.UNSET && operation !== IdentifyOperation.REMOVE) {\n      return isValidProperties(property, value);\n    }\n    return true;\n  }\n}\n"]}