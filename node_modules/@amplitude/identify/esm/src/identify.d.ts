import { IdentifyEvent, GroupIdentifyEvent, IdentifyUserProperties, ValidPropertyType } from '@amplitude/types';
export declare class Identify {
    protected readonly _propertySet: Set<string>;
    protected _properties: IdentifyUserProperties;
    protected _groups: {
        [groupName: string]: string;
    };
    /** Create a user identify event out of this identify */
    identifyUser(userId: string | null, deviceId?: string | null): IdentifyEvent;
    identifyGroup(groupName: string, groupValue: string): GroupIdentifyEvent;
    protected getUserProperties(): IdentifyUserProperties;
    protected getGroupUserProperties(): IdentifyUserProperties;
    setGroup(groupName: string, groupValue: string): Identify;
    set(property: string, value: ValidPropertyType): Identify;
    setOnce(property: string, value: ValidPropertyType): Identify;
    append(property: string, value: ValidPropertyType): Identify;
    prepend(property: string, value: ValidPropertyType): Identify;
    postInsert(property: string, value: ValidPropertyType): Identify;
    preInsert(property: string, value: ValidPropertyType): Identify;
    remove(property: string, value: ValidPropertyType): Identify;
    add(property: string, value: number): Identify;
    unset(property: string): Identify;
    clearAll(): Identify;
    private _safeSet;
    private _validate;
}
//# sourceMappingURL=identify.d.ts.map